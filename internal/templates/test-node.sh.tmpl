#!/bin/bash

set -euo pipefail

LINES=$(cat <<'EOF'
{{range .TestLines}}{{.Package}} '{{.TestPattern}}'
{{end}}EOF
)

FLAGS="{{.Flags}}"
count=0
commands=()

export PATH="{{.BinariesDir}}:$PATH"

while IFS= read -r line; do
  if [ -z "$line" ]; then
    continue
  fi
  count=$((count + 1))
  report="{{.ReportDir}}/junit-{{.NodeIndex}}-${count}.xml"
  pkg="${line%% *}"
  bin="${pkg//\//.}.test"
  runs="${line#$pkg }"

  CMD="cd ${pkg} && gotestsum -f standard-verbose --packages ${pkg} --rerun-fails --junitfile ${report} --junitfile-testsuite-name relative --junitfile-testcase-classname relative --raw-command -- go tool test2json -t -p ${pkg} ${bin} ${FLAGS} -test.run ${runs}"
  echo "$CMD"
  commands+=("$CMD")
done <<< "$LINES"

printf "\"%s\"\n" "${commands[@]}" | xargs -I {} -P {{.Concurrency}} bash -c '{}'
